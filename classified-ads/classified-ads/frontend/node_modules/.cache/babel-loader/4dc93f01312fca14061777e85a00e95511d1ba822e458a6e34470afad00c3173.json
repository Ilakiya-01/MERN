{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kanishmala M.S\\\\OneDrive\\\\Desktop\\\\exp 8\\\\classified-ads\\\\frontend\\\\src\\\\components\\\\Chat\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport socket from '../../services/socket';\nimport api from '../../services/api';\nimport AuthContext from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [room, setRoom] = useState('');\n  useEffect(() => {\n    if (user && userId) {\n      const roomId = [user.id, userId].sort().join('-');\n      setRoom(roomId);\n      socket.emit('joinRoom', {\n        room: roomId\n      });\n      fetchMessages();\n    }\n    socket.on('receiveMessage', message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [user, userId]);\n  const fetchMessages = async () => {\n    try {\n      const res = await api.get(`/chat/${userId}`);\n      setMessages(res.data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const sendMessage = () => {\n    if (newMessage.trim()) {\n      socket.emit('sendMessage', {\n        sender: user.id,\n        receiver: userId,\n        content: newMessage,\n        room\n      });\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === user.id ? 'own' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(msg.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"EHC0b55xqSTLLw3OXh3ZXSRxjAc=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","socket","api","AuthContext","jsxDEV","_jsxDEV","ChatRoom","_s","userId","user","messages","setMessages","newMessage","setNewMessage","room","setRoom","roomId","id","sort","join","emit","fetchMessages","on","message","prev","off","res","get","data","error","console","sendMessage","trim","sender","receiver","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","Date","timestamp","toLocaleString","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kanishmala M.S/OneDrive/Desktop/exp 8/classified-ads/frontend/src/components/Chat/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport socket from '../../services/socket';\r\nimport api from '../../services/api';\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\nconst ChatRoom = () => {\r\n  const { userId } = useParams();\r\n  const { user } = useContext(AuthContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [room, setRoom] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user && userId) {\r\n      const roomId = [user.id, userId].sort().join('-');\r\n      setRoom(roomId);\r\n      socket.emit('joinRoom', { room: roomId });\r\n      fetchMessages();\r\n    }\r\n\r\n    socket.on('receiveMessage', (message) => {\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [user, userId]);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await api.get(`/chat/${userId}`);\r\n      setMessages(res.data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      socket.emit('sendMessage', {\r\n        sender: user.id,\r\n        receiver: userId,\r\n        content: newMessage,\r\n        room,\r\n      });\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-room\">\r\n      <h2>Chat</h2>\r\n      <div className=\"messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender === user.id ? 'own' : ''}`}>\r\n            <p>{msg.content}</p>\r\n            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAK,CAAC,GAAGV,UAAU,CAACI,WAAW,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,IAAID,MAAM,EAAE;MAClB,MAAMQ,MAAM,GAAG,CAACP,IAAI,CAACQ,EAAE,EAAET,MAAM,CAAC,CAACU,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MACjDJ,OAAO,CAACC,MAAM,CAAC;MACff,MAAM,CAACmB,IAAI,CAAC,UAAU,EAAE;QAAEN,IAAI,EAAEE;MAAO,CAAC,CAAC;MACzCK,aAAa,CAAC,CAAC;IACjB;IAEApB,MAAM,CAACqB,EAAE,CAAC,gBAAgB,EAAGC,OAAO,IAAK;MACvCZ,WAAW,CAACa,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXtB,MAAM,CAACwB,GAAG,CAAC,gBAAgB,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAAChB,IAAI,EAAED,MAAM,CAAC,CAAC;EAElB,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMxB,GAAG,CAACyB,GAAG,CAAC,SAASnB,MAAM,EAAE,CAAC;MAC5CG,WAAW,CAACe,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAInB,UAAU,CAACoB,IAAI,CAAC,CAAC,EAAE;MACrB/B,MAAM,CAACmB,IAAI,CAAC,aAAa,EAAE;QACzBa,MAAM,EAAExB,IAAI,CAACQ,EAAE;QACfiB,QAAQ,EAAE1B,MAAM;QAChB2B,OAAO,EAAEvB,UAAU;QACnBE;MACF,CAAC,CAAC;MACFD,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhC,OAAA;MAAAgC,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbpC,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtB3B,QAAQ,CAACgC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBvC,OAAA;QAAiB+B,SAAS,EAAE,WAAWO,GAAG,CAACV,MAAM,KAAKxB,IAAI,CAACQ,EAAE,GAAG,KAAK,GAAG,EAAE,EAAG;QAAAoB,QAAA,gBAC3EhC,OAAA;UAAAgC,QAAA,EAAIM,GAAG,CAACR;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBpC,OAAA;UAAAgC,QAAA,EAAQ,IAAIQ,IAAI,CAACF,GAAG,CAACG,SAAS,CAAC,CAACC,cAAc,CAAC;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFjDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpC,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhC,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErC,UAAW;QAClBsC,QAAQ,EAAGC,CAAC,IAAKtC,aAAa,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC,mBAAmB;QAC/BC,UAAU,EAAGH,CAAC,IAAKA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAIxB,WAAW,CAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACFpC,OAAA;QAAQmD,OAAO,EAAEzB,WAAY;QAAAM,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CApEID,QAAQ;EAAA,QACON,SAAS;AAAA;AAAAyD,EAAA,GADxBnD,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}